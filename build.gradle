buildscript {
    ext {
        springBootVersion = '1.5.9.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects {
    
    group = 'xyz.sluggard'
    version = '1.0-SNAPSHOT'

}

subprojects { subproj ->

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    
    
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
    
    compileJava.options.encoding = 'UTF-8'

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
    
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        jcenter()
        mavenCentral()
        maven { url "http://192.168.1.31:8081/nexus/content/groups/public" }
    }
    

    dependencies {
        compile 'org.slf4j:slf4j-api:1.7.21'
        compile 'log4j:log4j:1.2.17'
        compile "org.projectlombok:lombok:1.16.18"
        compile "xyz.sluggard:utils:1.0"

        testCompile 'junit:junit:4.12'
    }
    


    // 上传 jar 包到自己的 maven 服务器
    //
    // uploadArchives {

    //     repositories.mavenDeployer {
    //         //beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
    //         configuration = configurations.deployerJars
    //         repository(
    //                 // 这儿需要注意，后面的地址是服务器地址，需要写全，是个大坑啊
    //                 // 另外初次执行的时候最好带上 --info 参数，会提示保存 ssh 验证信息的
    //                 // 这时候需要输入 yes
    //                 //
    //                 // 更详细说明参见我的 blog: http://my.oschina.net/someok/blog/374562
    //                 url: //"file://d:/Develop/MyProjects/repos/"
    //                         "scp://repos.example.com:22/home/maven/repos/release"
    //         )
    //                 {
    //                     // If these are not defined assemble needlessly fails for unrelated tasks, hence, defaultBlank.
    //                     authentication(userName: "maven", password: "maven")
    //                 }

    //     }
    // }

}

project(':th-api') {

	apply plugin: 'war'
	apply plugin: 'org.springframework.boot'
	
	def env=System.properties['profile']?:"local"
    
	println "src/main/resources/env/${env}"
	
	sourceSets {
	    main {
	        resources {
                srcDirs "src/main/env/${env}"
	            // srcDirs(["src/main/resources","src/main/env/${env}"])
	            exclude "src/main/resources"
	        }
	    }
	}

    dependencies {
        compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
        compile("org.springframework.boot:spring-boot-devtools")
        compile project(':th-service')
    }
}

project(':th-service') {
	dependencies {
		compile project(':th-metadata')
	}
}

project(':th-metadata') {

    dependencies {
        compile 'org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1'
        compile 'mysql:mysql-connector-java:5.1.34'
    }
}